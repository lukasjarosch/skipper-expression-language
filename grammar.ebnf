grammar = "${", expression , "}";
expression = standalone_variable |inline_variable | path | call;

inline_variable = "$", identifier;
standalone_variable = identifier;
path = identifier, path_tail;
path_tail = {":", (identifier | inline_variable) }-;
call = identifier, "(", argument_list, ")", alt_expression;
argument_list = {(quoted_string | inline_variable | path | call)}, {argument_list_tail};
argument_list_tail = {",", (quoted_string | inline_variable | path | call)};
alt_expression = {"||", expression};

quoted_string = quote, character, quote;

identifier = letter, identifier_tail;
identifier_tail = {digit | ident_symbol | letter};

quote = '"' | "'";

character = letter | digit | "!@#$%^&*()-_=+{};:,.<>/?|`~";

letter
  = "A" | "B" | "C" | "D" | "E" | "F" | "G"
  | "H" | "I" | "J" | "K" | "L" | "M" | "N"
  | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
  | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
  | "c" | "d" | "e" | "f" | "g" | "h" | "i"
  | "j" | "k" | "l" | "m" | "n" | "o" | "p"
  | "q" | "r" | "s" | "t" | "u" | "v" | "w"
  | "x" | "y" | "z"
  ;

digit
  = "0" | "1" | "2" | "3" | "4" | "5" | "6"
  | "7" | "8" | "9"
  ;

ident_symbol  = "-" | "_"  ;
